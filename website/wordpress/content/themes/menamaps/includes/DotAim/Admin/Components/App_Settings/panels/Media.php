<?php

namespace DotAim\Admin\Components\App_Settings;

use DotAim\F;

/**
 * @internal
 */
class Media extends \DotAim\Admin\Panel
{

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * CONFIG - START
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */

	/**
	 * @internal
	 */
	public function config()
	{

		$sections = [

			['id' => 'upload_mimes'],

		];

		// -------------------------------------------------------------------------

		return [
			'title'		=> $this->__('Media'),
			'icon'		=> 'dashicons-admin-media',
			'content'	=> $this->populate_sections_args( $sections ),
		];

	}
	// config()

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * CONFIG - END
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */



	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * APPLY - START
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */

	/**
	 * @internal
	 */
	protected function apply()
	{

		if ( empty( $this->settings() ) )
		{
			return;
		}

		// -------------------------------------------------------------------------

		if ( $this->settings(['upload_mimes', 'mime_types']) )
		{
			add_filter( 'upload_mimes', [ $this, 'upload_mimes_apply' ] );
		}

	}
	// apply()

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * APPLY - END
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */



	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * upload_mimes - START
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */

	/**
	 * @internal
	 */
	protected function upload_mimes_content()
	{

		$out = [

			[
				'id' 			=> 'mime_types',
				'label' 	=> $this->__('MIME Types'),
				'desc' 		=> $this->__('Enable additional MIME types.'),
				'type' 		=> 'array_field',
				//'display'	=> 'single', // @todo in $this->field_array_field()
				'fields'	=> [
					[
						'id'		=> 'id',
						'type'	=> 'text',
						'label'	=> $this->__('File Extension (Used as ID)'),
						'attr'	=> ['placeholder' => $this->__('File Extension (Used as ID)')],
						'desc'	=> $this->__('The file extension without the dot, such as <code>svg</code>.'),
					],
					[
						'id'		=> 'type',
						'type'	=> 'text',
						'label'	=> $this->__('MIME Type'),
						'attr'	=> ['placeholder' => $this->__('MIME Type')],
						'desc'	=> $this->__('The MIME Type, such as <code>image/svg+xml</code>.'),
					],
				],
				'default'	=> [
					[
						'id'		=> 'svg',
						'type'	=> 'image/svg+xml',
					],
				],
			],

		];

		// -------------------------------------------------------------------------

		return $out;

	}
	// upload_mimes_content()



	/**
	 * @internal
	 */
	public function upload_mimes_apply( $mimes )
	{

		$custom_mimes = $this->settings(['upload_mimes', 'mime_types']);

		if ( empty( $custom_mimes ) )
		{
			return $mimes;
		}

		// -------------------------------------------------------------------------

		foreach ( $custom_mimes as $mime )
		{
			if ( $mime['id'] && $mime['type'] )
			{
				$mimes[ $mime['id'] ] = $mime['type'];
			}
		}

		// -------------------------------------------------------------------------

		return $mimes;

	}
	// upload_mimes_apply()

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * upload_mimes - END
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */

}
// Class Media
