<?php

namespace DotAim\Base;

use DotAim\File;

class Load_From_Files
{

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * PROPERTIES - START
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */

	/**
	 * @since 1.0.0
	 */
	protected $core;

	/**
	 * @since 1.0.0
	 */
	protected $order;

	/**
	 * @since 1.0.0
	 */
	protected $files;

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * PROPERTIES - END
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */



	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * MAGIC METHODS - START
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */

	/**
	 * @return Class
	 *
	 * @since 1.0.0
	 */
	public function __construct( $core )
	{

		$this->core = $core;

		// -------------------------------------------------------------------------

		$this->load();

		// -------------------------------------------------------------------------

		$this->core->call_object_func( $this, 'init' );

	}
	// __construct()

	/* ===========================================================================
	 * ---------------------------------------------------------------------------
	 * MAGIC METHODS - END
	 * ---------------------------------------------------------------------------
	 * ======================================================================== */



	/**
	 * @since 1.0.0
	 */
	protected function load()
	{

		if ( ! $files = $this->files() )
		{
			return;
		}

		// -------------------------------------------------------------------------

		foreach ( $files as $file )
		{
			if ( ! empty( $file['class']['full_name'] ) )
			{
				$sc = new $file['class']['full_name']( $this->core );
			}
		}

	}
	// load()



	/**
	 * @since 1.0.0
	 */
	public function files()
	{

		if ( ! empty( $this->{__FUNCTION__} ) )
		{
			return $this->{__FUNCTION__};
		}

		// -------------------------------------------------------------------------

		$class_path					= $this->core->NS()->class_path( get_class( $this ) );
		$class_dir					= dirname( $class_path );
		$class_filename			= basename( $class_path );
		$base_class_filename= $this->core->NS()->class_name( get_class( $this ) ) . '_Base.php';

		$exclude = array(
			$class_filename,
			$base_class_filename,
		);

		// -------------------------------------------------------------------------

		$out = File::get_directory_files(
			$class_dir,
			$exclude
		);

		// -------------------------------------------------------------------------

		if ( ! empty( $this->order ) )
		{
			$re_ordered = array();

			foreach ( (array) $this->order as $key )
			{
				if ( array_key_exists( $key, (array) $out ) )
				{
					$re_ordered[ $key ] = $out[ $key ];

					unset( $out[ $key ] );
				}
			}

			// -----------------------------------------------------------------------

			$out = array_merge( $re_ordered, $out );
		}

		// -------------------------------------------------------------------------

		$this->{__FUNCTION__} = $out;

		// -------------------------------------------------------------------------

		return $this->{__FUNCTION__};

	}
	// files()

}
// class Load_From_Files
